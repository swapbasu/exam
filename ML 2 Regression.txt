#Linear Regression
sumSS<-0
#Reading from the dataset
sample1=read.table("/home/mubassir/my_data (1).txt")

#Linear Model, variable x1
p<-lm (y ~ x1,data=sample1,x=T,y=T)
print(p)

predictedY<-predict(p,sample1)
print(predictedY)

#Calculating error
error<-abs(sample1$y-predictedY)
plot(error)

#calculating the squared error
suqarederror<-error * error
sumSS[2]<-sum(suqarederror)

p <- lm(y ~ x2,data = sample1,x=T,y=T) #Linear Model, variable x2
print(p)


predictedY<-predict(p,sample1)
print(predictedY)

error<-abs(sample1$y-predictedY) #Calculating error
plot(error)


#calculating the squared error
suqarederror<-error * error
plot(suqarederror)


sumSS[2]<-sum(suqarederror)

#CROSS VALIDATION
TrsumSS<-0
TssumSS<-0
TrMSE<-0
TsMSE<-0
p<-0
i<-1
dim(sample1)
for(i in 1:10)
{
  p=10*i
  TrainingData<-head(sample1,p)
  dim(TrainingData)
  lmodel_training_data<-lm(y~x1+x2+x3+x4+x5+x6+x7,data = TrainingData , x=T , y=T)
  predictedY<-predict(lmodel_training_data,TrainingData)
  predictedY
  TrainingData$y
  Trerror<-abs(TrainingData$y - predictedY)
  Trsquarederror<-Trerror*Trerror
  TrsumSS[i]<-sum(Trsquarederror)
  TrMSE[i]<-mean(Trsquarederror)
  
  TestData<-tail(sample1,100-p)
  predictedY<-predict(lmodel_training_data,TestData)
  Tserror<-abs(TestData$y - predictedY)
  Tssquarederror<-Tserror*Tserror
  TssumSS[i]<-sum(Tssquarederror)
  TsMSE[i]<-mean(Tssquarederror)
}
plot(TrsumSS,main="effect of size of training and test error")

lines(x=TrsumSS,y=NULL,type="l",col="blue")
points(TssumSS,pch=10,col="red")
lines(x=TssumSS,y=NULL,type="l",col="red")
plot(TrMSE,main = "effect of size on training MSE(BLUE) and test MSE(RED)",ylim = c(0,0.02))
lines(x=TrMSE,y=NULL,type = "l",col="blue")
points(TsMSE,pch=10,col="red")
lines(x=TsMSE,y=NULL,type = "l",col="red")

